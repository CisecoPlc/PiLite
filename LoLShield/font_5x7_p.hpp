// Font definition for LCD 3110 library
// 5 x 7 font
// 1 pixel space at left and bottom
// index = ASCII - 32
#include <avr/pgmspace.h>

#define DESCENDERS		// comment out to keep descender off the bottom row

//***** Small fonts (5x7) **********

static const unsigned char smallFont[][7] PROGMEM =
{
      {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4} ,   // sp
      {0x5f, 0x00, 0x00, 0x00, 0x00, 0x00, 2} ,   // !
      {0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 4} ,   // "
      {0x14, 0x3e, 0x14, 0x3e, 0x14, 0x00, 6} ,   // #
      //{0x24, 0x2a, 0x7f, 0x2a, 0x12, 0x00, 6} ,   // $
      {0x48, 0x7e, 0x49, 0x4a, 0x20, 0x00, 6} ,   // $ == £
      {0x23, 0x13, 0x08, 0x64, 0x62, 0x00, 6} ,   // %
      {0x36, 0x49, 0x56, 0x20, 0x50, 0x00, 6} ,   // &
      {0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 2} ,   // '
      {0x1c, 0x22, 0x41, 0x00, 0x00, 0x00, 4} ,   // (
      {0x41, 0x22, 0x1c, 0x00, 0x00, 0x00, 4} ,   // )
      {0x2a, 0x1c, 0x7f, 0x1c, 0x2a, 0x00, 6} ,   // *
      {0x08, 0x08, 0x3E, 0x08, 0x08, 0x00, 6} ,   // +
#ifndef DESCENDERS
      {0x50, 0x30, 0x00, 0x00, 0x00, 0x00, 3} ,   // , 
#else
      {0xb0, 0x70, 0x00, 0x00, 0x00, 0x00, 3} ,   // , 
#endif
      {0x08, 0x08, 0x08, 0x08, 0x08, 0x00, 6} ,   // -
      {0x60, 0x60, 0x00, 0x00, 0x00, 0x00, 3} ,   // .
      {0x20, 0x10, 0x08, 0x04, 0x02, 0x00, 6} ,   // /
      {0x3E, 0x51, 0x49, 0x45, 0x3E, 0x00, 6} ,   // 0
      {0x42, 0x7F, 0x40, 0x00, 0x00, 0x00, 4} ,   // 1
      {0x42, 0x61, 0x51, 0x49, 0x46, 0x00, 6} ,   // 2
      {0x22, 0x41, 0x49, 0x49, 0x36, 0x00, 6} ,   // 3
      {0x18, 0x14, 0x12, 0x7F, 0x10, 0x00, 6} ,   // 4
      {0x27, 0x45, 0x45, 0x45, 0x39, 0x00, 6} ,   // 5
      {0x3C, 0x4A, 0x49, 0x49, 0x30, 0x00, 6} ,   // 6
      {0x01, 0x71, 0x09, 0x05, 0x03, 0x00, 6} ,   // 7
      {0x36, 0x49, 0x49, 0x49, 0x36, 0x00, 6} ,   // 8
      {0x06, 0x49, 0x49, 0x49, 0x3E, 0x00, 6} ,   // 9
      {0x36, 0x36, 0x00, 0x00, 0x00, 0x00, 3} ,   // :
#ifndef DESCENDERS
      {0x56, 0x36, 0x00, 0x00, 0x00, 0x00, 3} ,   // ;
#else
      {0xb6, 0x76, 0x00, 0x00, 0x00, 0x00, 3} ,   // ;
#endif
      {0x08, 0x14, 0x22, 0x41, 0x00, 0x00, 5} ,   // <
      {0x14, 0x14, 0x14, 0x14, 0x14, 0x00, 6} ,   // =
      {0x41, 0x22, 0x14, 0x08, 0x00, 0x00, 5} ,   // >
      {0x02, 0x01, 0x51, 0x09, 0x06, 0x00, 6} ,   // ?
      {0x3e, 0x41, 0x5d, 0x55, 0x5E, 0x00, 6} ,   // @
      {0x7c, 0x12, 0x11, 0x12, 0x7c, 0x00, 6} ,   // A
      {0x7F, 0x49, 0x49, 0x49, 0x36, 0x00, 6} ,   // B
      {0x3E, 0x41, 0x41, 0x41, 0x22, 0x00, 6} ,   // C
      {0x7F, 0x41, 0x41, 0x41, 0x3e, 0x00, 6} ,   // D
      {0x7F, 0x49, 0x49, 0x49, 0x41, 0x00, 6} ,   // E
      {0x7F, 0x09, 0x09, 0x09, 0x01, 0x00, 6} ,   // F
      {0x3E, 0x41, 0x49, 0x49, 0x3A, 0x00, 6} ,   // G
      {0x7F, 0x08, 0x08, 0x08, 0x7F, 0x00, 6} ,   // H
      {0x41, 0x7F, 0x41, 0x00, 0x00, 0x00, 4} ,   // I
      {0x20, 0x40, 0x40, 0x3F, 0x00, 0x00, 5} ,   // J
      {0x7F, 0x08, 0x14, 0x22, 0x41, 0x00, 6} ,   // K
      {0x7F, 0x40, 0x40, 0x40, 0x40, 0x00, 6} ,   // L
      {0x7F, 0x02, 0x0C, 0x02, 0x7F, 0x00, 6} ,   // M
      {0x7F, 0x02, 0x04, 0x08, 0x7F, 0x00, 6} ,   // N
      {0x3E, 0x41, 0x41, 0x41, 0x3E, 0x00, 6} ,   // O
      {0x7F, 0x09, 0x09, 0x09, 0x06, 0x00, 6} ,   // P
      {0x3E, 0x41, 0x51, 0x21, 0x5E, 0x00, 6} ,   // Q
      {0x7F, 0x09, 0x19, 0x29, 0x46, 0x00, 6} ,   // R
      {0x26, 0x49, 0x49, 0x49, 0x32, 0x00, 6} ,   // S
      {0x01, 0x01, 0x7F, 0x01, 0x01, 0x00, 6} ,   // T
      {0x3F, 0x40, 0x40, 0x40, 0x3F, 0x00, 6} ,   // U
      {0x1F, 0x20, 0x40, 0x20, 0x1F, 0x00, 6} ,   // V
      {0x3F, 0x40, 0x38, 0x40, 0x3F, 0x00, 6} ,   // W
      {0x63, 0x14, 0x08, 0x14, 0x63, 0x00, 6} ,   // X
      {0x07, 0x08, 0x70, 0x08, 0x07, 0x00, 6} ,   // Y
      {0x61, 0x51, 0x49, 0x45, 0x43, 0x00, 6} ,   // Z
      {0x7F, 0x41, 0x41, 0x00, 0x00, 0x00, 4} ,   // [
      {0x55, 0x2A, 0x55, 0x2A, 0x55, 0x00, 6} ,   // 55	??
      {0x41, 0x41, 0x7F, 0x00, 0x00, 0x00, 4} ,   // ]
      {0x04, 0x02, 0x01, 0x02, 0x04, 0x00, 6} ,   // ^
#ifndef DESCENDERS
      {0x40, 0x40, 0x40, 0x40, 0x40, 0x00, 6} ,   // _
#else
      {0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 6} ,   // _
#endif
      {0x01, 0x02, 0x04, 0x00, 0x00, 0x00, 4} ,   // '
      {0x20, 0x54, 0x54, 0x78, 0x00, 0x00, 5} ,   // a
      {0x7F, 0x44, 0x44, 0x38, 0x00, 0x00, 5} ,   // b
      {0x38, 0x44, 0x44, 0x44, 0x00, 0x00, 5} ,   // c
      {0x38, 0x44, 0x44, 0x7F, 0x00, 0x00, 5} ,   // d
      {0x38, 0x54, 0x54, 0x58, 0x00, 0x00, 5} ,   // e
      {0x04, 0x7E, 0x05, 0x01, 0x00, 0x00, 5} ,   // f
#ifndef DESCENDERS
      {0x08, 0x54, 0x54, 0x3c, 0x00, 0x00, 5} ,   // g
#else
      {0x18, 0xa4, 0xa4, 0x7c, 0x00, 0x00, 5} ,   // g
#endif
      {0x7F, 0x08, 0x04, 0x78, 0x00, 0x00, 5} ,   // h
      {0x7D, 0x00, 0x00, 0x00, 0x00, 0x00, 2} ,   // i
#ifndef DESCENDERS
      {0x20, 0x40, 0x3D, 0x00, 0x00, 0x00, 4} ,   // j
#else
      {0x40, 0x80, 0x7D, 0x00, 0x00, 0x00, 4} ,   // j
#endif
      {0x7F, 0x10, 0x28, 0x44, 0x00, 0x00, 5} ,   // k
      {0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 2} ,   // l
      {0x78, 0x04, 0x18, 0x04, 0x78, 0x00, 6} ,   // m
      {0x7c, 0x08, 0x04, 0x78, 0x00, 0x00, 5} ,   // n
      {0x38, 0x44, 0x44, 0x38, 0x00, 0x00, 5} ,   // o
#ifndef DESCENDERS
      {0x7C, 0x14, 0x14, 0x08, 0x00, 0x00, 5} ,   // p
      {0x08, 0x14, 0x14, 0x7C, 0x00, 0x00, 5} ,   // q
#else
      {0xfC, 0x24, 0x24, 0x18, 0x00, 0x00, 5} ,   // p
      {0x18, 0x24, 0x24, 0xfC, 0x00, 0x00, 5} ,   // q
#endif
      {0x7C, 0x08, 0x04, 0x04, 0x00, 0x00, 5} ,   // r
      {0x48, 0x54, 0x54, 0x24, 0x00, 0x00, 5} ,   // s
      {0x04, 0x7F, 0x44, 0x00, 0x00, 0x00, 4} ,   // t
      {0x3C, 0x40, 0x40, 0x3c, 0x00, 0x00, 5} ,   // u
      {0x0C, 0x30, 0x40, 0x30, 0x0c, 0x00, 6} ,   // v
      {0x3C, 0x40, 0x30, 0x40, 0x3C, 0x00, 6} ,   // w
      {0x44, 0x28, 0x10, 0x28, 0x44, 0x00, 6} ,   // x
#ifndef DESCENDERS
      {0x0C, 0x50, 0x50, 0x3c, 0x00, 0x00, 5} ,   // y
#else
      {0x1C, 0xa0, 0xa0, 0x7c, 0x00, 0x00, 5} ,   // y
#endif
      {0x44, 0x64, 0x54, 0x4C, 0x44, 0x00, 6} ,   // z
      {0x06, 0x09, 0x09, 0x06, 0x00, 0x00, 5}     // º  
};


